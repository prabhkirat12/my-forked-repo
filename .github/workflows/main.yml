name: Deploy Node.js App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the Code
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Step 2: Cache Node.js Modules
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    # Step 3: Install Dependencies
    - name: Install Dependencies
      run: npm install

    # Step 4: Run Unit Tests
    - name: Run Unit Tests
      run: npm test

    # Step 5: Run Linter
    - name: Run Linter
      run: npm run lint

    # Step 6: Deploy to Server
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: 95.111.219.120
        username: vaidik
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          set -e
          echo "Checking if Docker is installed on the server..."
          if ! [ -x "$(command -v docker)" ]; then
            echo "Docker is not installed. Installing Docker..."
            sudo apt update && sudo apt install -y docker.io
          fi
          echo "Docker is installed and ready."

          echo "Navigating to Photography-App directory..."
          cd Photography-App || {
            echo "Folder not found. Cloning private repository.";
            git clone https://${{ secrets.GH_PAT }}@github.com/<your-username>/<your-repo>.git Photography-App && cd Photography-App;
          }

          echo "Pulling the latest changes from the repository..."
          git pull origin main

          echo "Stopping any running containers..."
          docker-compose down

          echo "Building and starting containers..."
          docker-compose up --build -d

          echo "Running server-side tests..."
          docker exec moe-nodejs-app npm test || { echo "Server-side tests failed."; exit 1; }

          echo "Deployment completed successfully."

    # Step 7: Post-Deployment Verification
    - name: Verify Deployment
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: 95.111.219.120
        username: vaidik
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          echo "Verifying running containers..."
          docker ps

          echo "Checking application health..."
          curl -I http://localhost:30001 || { echo "Application is not responding."; exit 1; }

    # Step 8: Notify on Failure (Optional)
    - name: Notify on Failure
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        text: "Deployment failed for Node.js App."
